Building the kit:

	Requirements:

		* cmake 2.4 or newer is required to configure the Makefiles
		* Developed against Postgresql 8.4 and newer.  May work with older
		  versions but not quite tested.
		* pqxx 2.6.0.  Maybe work with older versions but not quite tested.

	1. Configure:

		cmake CMakeLists.txt -DDBMS=pgsql

	2. Build EGen:

		cd egen/prj
		make -f Makefile.pgsql

	2. Build and install the C stored functions:

		cd storedprocs/pgsql/c
		make
		make install

	3. Make the rest of the kit:

		# At the top level of the tree
		make
		make install

-----

These PostgreSQL and PostgreSQL specific testing environment variables need to
be set:

# Our database will be named dbt5
DBNAME=dbt5; export DBNAME

# pgdata path.  Storage location for this instance of the database should be
# within the working directory.  If you're going to mount a device, do it at
# /mnt/dbt5.  For example:
export PGDATA=/mnt/dbt5/pgdata

# Directory with filesystem mount points to be used for tablespaces.  This is
# required only if using tablespaces.
export TSDIR=/mnt/dbt5

# Run a quick 60 second test.
    dbt5-run-workload -a pgsql -c 5000 -t 5000 -d 60 -u 1 -i ~/dbt5/egen \
			-f 500 -w 300 -n dbt5 -o /tmp/results

-----

To build a small database (see README for notes on database size):
	dbt5-pgsql-build-db -c 1000 -i 1000 -s 500 -w 1

-----

multi-tier notes

Default PostgreSQL installations from CVS or source disable the tpc/ip listener
except for localhost connections.  It can be enabled through the
scripts/run-workload scripts using '-d "-c listen_addresses=*"' to enable
listening from all ip accresses, or by setting the postgresql.conf file.

The pg_hba.conf file also must be modified in order to allow connections from another host.

See examples in the examples/pgsql directory.
